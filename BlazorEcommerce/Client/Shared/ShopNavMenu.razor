@using BlazorEcommerce.Client.Shared.Components.Common
@using BlazorEcommerce.Client.Shared.Components

@inject NavigationManager navMan

@inject ICategoryStore categoryStore

<MudAppBar Style="height=200px" Elevation="1">
    <MudText Typo="Typo.h5" Class="ml-3">Blazor Shop</MudText>
    <MudSpacer />
    <MudButton Variant="Variant.Text" OnClick="() => GoToHome()" StartIcon="@Icons.Material.Filled.Home" Color="Color.Inherit" Size="Size.Large">Home</MudButton>
    <MudSpacer />
    @if (categoryStore.Categories != null)
    {
        @foreach (var category in categoryStore.Categories)
        {
            <MudButton Variant="Variant.Text" OnClick="() => CategoryClick(category.Url)" StartIcon="@SetIcon(category.Name)" Color="Color.Inherit" Size="Size.Large">@category.Name</MudButton>
        }
    }




    @*<MudButton Variant="Variant.Text" StartIcon="@Icons.Material.Filled.Book" Color="Color.Inherit" Size="Size.Large">Books</MudButton>

    <MudButton Variant="Variant.Text" StartIcon="@Icons.Material.Filled.VideogameAsset" Color="Color.Inherit" Size="Size.Large">Video Games</MudButton>*@
    <MudSpacer />
    <SearchBar />
    <MudSpacer />
    <CartCounter />
    <UserButton />
    <MudSpacer />

</MudAppBar>

@code {

    private void GoToHome()
    {
        navMan.NavigateTo("");
    }

    private void CategoryClick(string url)
    {
        navMan.NavigateTo(url);
    }

    private string SetIcon(string name)
    {
        switch (name)
        {
            case "Movies":
                return Icons.Material.Filled.Movie; break;
            case "Books":
                return Icons.Material.Filled.Book; break;
            case "Video Games":
                return Icons.Material.Filled.VideogameAsset; break;
        }
        return "";
    }

    protected override async Task OnInitializedAsync()
    {
        await categoryStore.GetCategories();
    }
}